<?php

/**
 * @file
 * Primary module hooks for vactory FAQ module.
 */

use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;

/**
 * Implements hook_theme().
 */
function vactory_faq_theme() {
  return [
    // Node > full.
    'node__vactory_faq__full' => [
      'base hook' => 'node',
      'template'  => 'full',
    ],
    // Node > Smart search.
    'node__vactory_faq__smart_search'        => [
      'base hook' => 'node',
      'template'  => 'smart-search',
    ],
    // Node > card.
    'node__vactory_faq__card' => [
      'base hook' => 'node',
      'template'  => 'card',
    ],
    // Node > Mur.
    'node__vactory_faq__mur' => [
      'base hook' => 'node',
      'template'  => 'mur',
    ],
    // accordion.
    'vactory_faq_accordion' => [
      'base hook' => 'aqfield_jquery_accordion_formatter',
      'template'  => 'accordion',
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function vactory_faq_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (isset($form['search_api_fulltext']) && isset($form['#info']['filter-search_api_fulltext']['label'])) {
    $form['search_api_fulltext']['#attributes']['placeholder'] = $form['#info']['filter-search_api_fulltext']['label'];
    unset($form['#info']['filter-search_api_fulltext']['label']);
  }
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function vactory_faq_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'faqfield_jquery_accordion_formatter') {
    $suggestions[] = 'vactory_faq_accordion';
  }
}

/**
 * Implements hook_json_api_collection_alter().
 */
function vactory_faq_json_api_collection_alter(&$filters, &$context) {
  if ($context['id'] === 'vactory_faq_list') {
    $query = \Drupal::request()->query->all("q");
    if (empty($query)) {
      return;
    }

    if (isset($query["page"])) {
      $filters["page[offset]"] = intval($query["page"]) > 0 ? (intval($query["page"]) - 1) * $filters["page[limit]"] : 0;
    }

    if (isset($query["term"]) && $query["term"] !== "all" && !empty($query["term"])) {
      $term = $query["term"];
      $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties([
        'vid' => 'faq_section',
        'term_2_slug' => $query["term"],
      ]);

      if (!$terms) {
        throw new NotFoundHttpException("[News - hook_json_api_collection_alter] term '$term' not found.");
      }

      if ($terms) {
        $term = reset($terms);
        $id = $term->id();
        $filters["filter[internal_category][condition][path]"] = "field_vactory_taxonomy_1.drupal_internal__tid";
        $filters["filter[internal_category][condition][operator]"] = "=";
        $filters["filter[internal_category][condition][value]"] = $id;
      }

    }
  }
}
